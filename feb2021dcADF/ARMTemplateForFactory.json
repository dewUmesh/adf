{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "feb2021dcADF"
		},
		"BLOBLINKSERVICEDC_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'BLOBLINKSERVICEDC'"
		},
		"CosmosDbSqlLinkService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CosmosDbSqlLinkService'"
		},
		"SqlDbLinkService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlDbLinkService'"
		},
		"blobLinkService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'blobLinkService'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LoadDataFromSqlDbToStorageContainer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_LoadEmpFromSqlDbToContainerFile",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_LoadEmpFromSqlDbToContainerFile",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SqlDb": {},
									"StorageContainerSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_LoadEmpFromSqlDbToContainerFile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BLOBDATASET')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blobLinkService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "dccontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blobLinkService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbSqlLinkService')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDbSqlLinkService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "emp-cdb"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDbSqlLinkService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDBLINKSERVICE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlDbLinkService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlDbLinkService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BLOBLINKSERVICEDC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('BLOBLINKSERVICEDC_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbSqlLinkService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDbSqlLinkService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlDbLinkService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('SqlDbLinkService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/blobLinkService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This is the link to local blob for reading",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('blobLinkService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_LoadEmpFromSqlDbToContainerFile')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SQLDBLINKSERVICE",
								"type": "DatasetReference"
							},
							"name": "SqlDb"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "BLOBDATASET",
								"type": "DatasetReference"
							},
							"name": "StorageContainerSink"
						}
					],
					"transformations": [
						{
							"name": "SurrogateKey1"
						}
					],
					"script": "source(output(\n\t\temployee_id as integer,\n\t\tfirst_name as string,\n\t\tlast_name as string,\n\t\temail as string,\n\t\tphone_number as string,\n\t\thire_date as date,\n\t\tjob_id as integer,\n\t\tsalary as decimal(8,2),\n\t\tmanager_id as integer,\n\t\tdepartment_id as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tinferDriftedColumnTypes: true,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'Select * from dbo.employees',\n\tformat: 'query') ~> SqlDb\nSqlDb keyGenerate(output(Skey as long),\n\tstartAt: 1L) ~> SurrogateKey1\nSurrogateKey1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['emp.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StorageContainerSink"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQLDBLINKSERVICE')]",
				"[concat(variables('factoryId'), '/datasets/BLOBDATASET')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_LoadDepFromSqlDbToContainerFile')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SQLDBLINKSERVICE",
								"type": "DatasetReference"
							},
							"name": "SqlDbSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "BLOBDATASET",
								"type": "DatasetReference"
							},
							"name": "StorageContainerSink"
						},
						{
							"linkedService": {
								"referenceName": "BLOBLINKSERVICEDC",
								"type": "LinkedServiceReference"
							},
							"name": "StorageAvroSink"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tdepartment_id as integer,\n\t\tdepartment_name as string,\n\t\tlocation_id as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dbo.departments',\n\tformat: 'query') ~> SqlDbSource\nSqlDbSource sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['dept.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StorageContainerSink\nSqlDbSource sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'avro',\n\tcontainer: 'dccontainer',\n\tcompressionType: 'none',\n\tpartitionFileNames:['depAvro'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StorageAvroSink"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQLDBLINKSERVICE')]",
				"[concat(variables('factoryId'), '/datasets/BLOBDATASET')]",
				"[concat(variables('factoryId'), '/linkedServices/BLOBLINKSERVICEDC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pf_LoadDepFromSqlDbToContainerFile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from dbo.departments",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "department_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"type": "Int32",
											"physicalType": "Int32",
											"ordinal": 1
										}
									},
									{
										"source": {
											"name": "department_name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"name": "location_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"type": "Int32",
											"physicalType": "Int32",
											"ordinal": 3
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQLDBLINKSERVICE",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "BLOBDATASET",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQLDBLINKSERVICE')]",
				"[concat(variables('factoryId'), '/datasets/BLOBDATASET')]"
			]
		}
	]
}